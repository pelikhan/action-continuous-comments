{
  "private": true,
  "version": "0.0.4",
  "description": "A GitHub Action to generate TypeScript comments.",
  "dependencies": {
    "@ast-grep/lang-c": "^0.0.2",
    "@ast-grep/lang-cpp": "^0.0.2",
    "@ast-grep/lang-csharp": "^0.0.2",
    "@ast-grep/lang-go": "^0.0.2",
    "@ast-grep/lang-java": "^0.0.3",
    "@ast-grep/lang-python": "^0.0.2",
    "@ast-grep/lang-ruby": "^0.0.3",
    "@ast-grep/lang-rust": "^0.0.3",
    "@ast-grep/lang-typescript": "^0.0.3",
    "@genaiscript/plugin-ast-grep": "^2.3.9",
    "genaiscript": "2.3.9"
  },
  "scripts": {
    "upgrade": "npx -y npm-check-updates -u && npm install && npm run fix",
    "lint": "npx --yes prettier --write .",
    "lint:check": "npx --yes prettier --check .",
    "fix": "genaiscript scripts fix",
    "typecheck": "genaiscript scripts compile",
    "configure": "genaiscript configure action continuous-comments",
    "test": "DEBUG=script* genaiscript run continuous-comments test/* --vars dryRun=true maxEdits=20 updateExisting=true",
    "mock-TypeScript": "DEBUG=script* genaiscript run continuous-comments ../TypeScript/src/**/*.ts --vars dryRun=true mock=true maxEdits=10000",
    "mini-TypeScript": "DEBUG=script* genaiscript run continuous-comments ../TypeScript/src/**/*.ts --vars dryRun=true maxEdits=2",
    "midi-TypeScript": "DEBUG=script* genaiscript run continuous-comments ../TypeScript/src/**/*.ts --vars dryRun=true maxEdits=100",
    "mock-typescript-write-docs": "DEBUG=script* genaiscript run continuous-comments test/typescript-without-docs.ts --vars dryRun=true mock=true",
    "mini-typescript-write-docs": "DEBUG=script* genaiscript run continuous-comments test/typescript-without-docs.ts --vars dryRun=true maxEdits=2",
    "mock-typescript-update-docs": "DEBUG=script* genaiscript run continuous-comments test/typescript-with-docs.ts --vars dryRun=true mock=true updateExisting=true",
    "mini-typescript-update-docs": "DEBUG=script* genaiscript run continuous-comments test/typescript-with-docs.ts --vars dryRun=true maxEdits=2 updateExisting=true",
    "mock-python-write-docs": "DEBUG=script* genaiscript run continuous-comments test/python-without-docs.py --vars dryRun=true mock=true",
    "mini-python-write-docs": "DEBUG=script* genaiscript run continuous-comments test/python-without-docs.py --vars dryRun=true maxEdits=2",
    "mock-python-update-docs": "DEBUG=script* genaiscript run continuous-comments test/python-with-docs.py --vars dryRun=true mock=true updateExisting=true",
    "mini-python-update-docs": "DEBUG=script* genaiscript run continuous-comments test/python-with-docs.py --vars dryRun=true maxEdits=2 updateExisting=true",
    "mock-csharp-write-docs": "DEBUG=script* genaiscript run continuous-comments test/csharp-without-docs.cs --vars dryRun=true mock=true",
    "mini-csharp-write-docs": "DEBUG=script* genaiscript run continuous-comments test/csharp-without-docs.cs --vars dryRun=true maxEdits=2",
    "mock-csharp-update-docs": "DEBUG=script* genaiscript run continuous-comments test/csharp-with-docs.cs --vars dryRun=true mock=true updateExisting=true",
    "mini-csharp-update-docs": "DEBUG=script* genaiscript run continuous-comments test/csharp-with-docs.cs --vars dryRun=true maxEdits=2 updateExisting=true",
    "mock-c-write-docs": "DEBUG=script* genaiscript run continuous-comments test/c-without-docs.c --vars dryRun=true mock=true",
    "mini-c-write-docs": "DEBUG=script* genaiscript run acontinuous-commentsction test/c-without-docs.c --vars dryRun=true maxEdits=2",
    "mock-c-update-docs": "DEBUG=script* genaiscript run continuous-comments test/c-with-docs.c --vars dryRun=true mock=true updateExisting=true",
    "mini-c-update-docs": "DEBUG=script* genaiscript run continuous-comments test/c-with-docs.c --vars dryRun=true maxEdits=2 updateExisting=true",
    "mock-java-write-docs": "DEBUG=script* genaiscript run continuous-comments test/java-without-docs.java --vars dryRun=true mock=true",
    "mini-java-write-docs": "DEBUG=script* genaiscript run continuous-comments test/java-without-docs.java --vars dryRun=true maxEdits=2",
    "mock-java-update-docs": "DEBUG=script* genaiscript run continuous-comments test/java-with-docs.java --vars dryRun=true mock=true updateExisting=true",
    "mini-java-update-docs": "DEBUG=script* genaiscript run continuous-comments test/java-with-docs.java --vars dryRun=true maxEdits=2 updateExisting=true",
    "mock-rust-write-docs": "DEBUG=script* genaiscript run continuous-comments test/rust-without-docs.rs --vars dryRun=true mock=true",
    "mini-rust-write-docs": "DEBUG=script* genaiscript run continuous-comments test/rust-without-docs.rs --vars dryRun=true maxEdits=2",
    "mock-cpp-write-docs": "DEBUG=script* genaiscript run continuous-comments test/cpp-without-docs.cpp --vars dryRun=true mock=true",
    "mini-cpp-write-docs": "DEBUG=script* genaiscript run continuous-comments test/cpp-without-docs.cpp --vars dryRun=true maxEdits=2",
    "mock-go-write-docs": "DEBUG=script* genaiscript run continuous-comments test/go-without-docs.go --vars dryRun=true mock=true",
    "mini-go-write-docs": "DEBUG=script* genaiscript run continuous-comments test/go-without-docs.go --vars dryRun=true maxEdits=2",
    "mock-ruby-write-docs": "DEBUG=script* genaiscript run continuous-comments test/ruby-without-docs.rb --vars dryRun=true mock=true",
    "mini-ruby-write-docs": "DEBUG=script* genaiscript run continuous-comments test/ruby-without-docs.rb --vars dryRun=true maxEdits=2",
    "mock-ruby-update-docs": "DEBUG=script* genaiscript run continuous-comments test/ruby-with-docs.rb --vars dryRun=true mock=true updateExisting=true",
    "mini-ruby-update-docs": "DEBUG=script* genaiscript run continuous-comments test/ruby-with-docs.rb --vars dryRun=true maxEdits=2 updateExisting=true",
    "mock": "DEBUG=script* genaiscript run continuous-comments --vars dryRun=true updateExisting=true mock=true",
    "dev": "genaiscript run continuous-comments",
    "dev:self": "genaiscript run continuous-comments --no-run-trace genaisrc/src/**",
    "start": "DEBUG=script* genaiscript run continuous-comments --github-workspace --no-run-trace --no-output-trace",
    "release": "sh release.sh"
  }
}
